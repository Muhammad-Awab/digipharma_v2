@page "/billing"

<h3>Billing</h3>


<section>
    <EditForm Model="_ModelBilling" OnSubmit="SubmitForm">
        <table>
            <tr>
                <td>
                    Billing Id
                </td>
                <td>
                    <input name="ID" @bind="_ModelBilling.pk_BillingId"></input>
                </td>
                <td>
                    <button @onclick="GetInitialData"> GetData</button>
                </td>
            </tr>
            <tr>
                <td>
                    TotalPrice
                </td>
                <td>
                    <input name="ID" @bind="_ModelBilling.TotalPrice" required></input>
                </td>
            </tr>
            <tr>
                <td>
                    Discount
                </td>
                <td>
                    <input name="Email" @bind="_ModelBilling.Discount" required></input>
                </td>
            </tr>
            <tr>
                <td>
                    Phone
                </td>
                <td>
                    <input name="Phone" @bind="_ModelBilling.DiscountPerc" required></input>
                </td>
            </tr>
            <tr>
                <td>
                    DiscountPerc
                </td>
                <td>
                    <input type="text" name="UserName" @bind="_ModelBilling.GrandTotal" required></input>
                </td>
            </tr>
            <tr>
                <td>
                    <button type="submit" class="btn btn-primary">Change</button>
                </td>
            </tr>
        </table>

    </EditForm>
</section>

<section>
    <div class="card">

        <!-- /.card-header -->
        <div class="card-body">
            <div class="d-flex gap-2">
                <input class="form-control w-50" type="text" @bind="searchTerm" id="myInput" onkeyup="myFunction()" placeholder="Search for names.." title="Type in a name">
                <button type="button" class="btn btn-primary" @onclick="CreatePagingInfo">Search</button>
            </div>
            <div class="table-responsive">
                <table id="myTable" class="table table-bordered table-striped ">
                    <thead>
                        <tr>
                            <th>pk_MedicineId</th>
                            <th>Name</th>
                            <th>UnitPrice</th>
                            <th>Location</th>
                            <th>Quantity</th>

                        </tr>
                    </thead>
                    <tbody>

                        @foreach (DataRow row in dt.Rows)
                        {
                            <tr>
                                <td>@row["pk_MedId"]</td>
                                <td>@row["Name"]</td>
                                <td>@row["UnitPrice"]</td>
                                <td>@row["Location"]</td>
                                <td>@row["Quantity"]</td>

                            </tr>
                        }
                    </tbody>
                    <tfoot>

                        <tr>
                            <td colspan="10">
                                <Pagination PI="pagingInfo" PageClassesEnabled="true" PageClass="Paging" PageClassSelected="active"></Pagination>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <!-- /.card-body -->
    </div>
</section>

@code {
    public EntBilling _ModelBilling { get; set; } = new EntBilling();
    DataTable dt = new DataTable();

    private void SubmitForm()
    {
        // _ModelBilling = DALCRUD.GetBillingRecordById(_ModelBilling.pk_BillingId);
        // GetMedicineData(_ModelBilling.pk_BillingId);

    }

    public void GetInitialData()
    {
        _ModelBilling = DALCRUD.GetBillingRecordById(_ModelBilling.pk_BillingId);
        GetMedicineData(_ModelBilling.pk_BillingId);
    }

    public async void GetMedicineData(int fk_BillingId)
    {
        SqlParameter[] sp =
        {
            new SqlParameter("@fk_BillingId",fk_BillingId)

    };

        dt = await DALCRUD.ReadDataSpecific("SP_GetMedicineByBillingId", sp);
        StateHasChanged();  
    }



    List<DataRow> allDataRows = new List<DataRow>();
    string searchTerm = "";
    IEnumerable<DataRow> pagedData = Enumerable.Empty<DataRow>();
    [Parameter]
    public int page { get; set; } = 1;
    int pageSize = 15; // Change this to your desired page size

    PagingInfo pagingInfo = new PagingInfo();

    protected override async Task OnInitializedAsync()
    {
        // dt = await DALCRUD.ReadTable("SP_GetMedicineRecord");
        // allDataRows = dt.Rows.Cast<DataRow>().ToList();
        // GetMedicineData(1);
    }
    protected override void OnParametersSet()
    {
        CreatePagingInfo();
    }
    public void CreatePagingInfo()
    {
        pagingInfo.CurrentPage = page;
        pagingInfo.TotalItems = allDataRows.Count;
        pagingInfo.ItemsPerPage = pageSize;

        // Apply search filter
        var filteredData = allDataRows.Where(row =>
      row["Name"].ToString()!.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
      row["Location"].ToString()!.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();

        pagingInfo.TotalItems = filteredData.Count;

        var skip = pageSize * (page - 1);

        if (searchTerm != "")
        {
            pagedData = filteredData;
        }
        else
        {
            pagedData = filteredData.Skip(skip).Take(pageSize);
        }
        Console.WriteLine($"Current Page: {page}, Total Items: {pagingInfo.TotalItems}, Page Size: {pageSize}, Skip: {skip}");
    }

    public void PageChanged(int newPage)
    {
        page = newPage;
        CreatePagingInfo();

    }
}
