@page "/billing"
@attribute [Authorize(Roles = "Admin,User")]
<h3 style="color: #333; font-family: 'Arial', sans-serif; border-bottom: 2px solid #ccc; padding-bottom: 5px; margin-bottom: 20px; text-align: center;">Billing</h3>



<section>
    <EditForm Model="_ModelBilling" OnSubmit="SubmitForm">
        <table>
            <tr>
                <td>
                    <strong>
                        Billing ID
                    </strong>
                </td>
                <td>
                    <input name="ID" @bind="_ModelBilling.pk_BillingId" class="form-control"></input>
                </td>
            </tr>
            <tr>
                <td>
                    <button @onclick="GetInitialData" style="background-color: green; color: white; border: none; padding: 10px 15px; cursor: pointer;">GetData</button>
                </td>
            </tr>
            <tr>
                <td>
                    <strong>Discount</strong>

                </td>
                <td>
                    <input name="Email" @bind="_ModelBilling.Discount" class="form-control" required></input>
                </td>
                <td>
                    <strong>TotalPrice</strong>
                </td>
                <td>
                    <input name="ID" @bind="_ModelBilling.TotalPrice" class="form-control" required></input>
                </td>
            </tr>
            <tr>
                <td>
                    <strong>DiscountPerc</strong>

                </td>
                <td>
                    <input type="text" name="UserName" @bind="_ModelBilling.GrandTotal" class="form-control" required></input>
                </td>
                <td>
                    <strong>Phone</strong>

                </td>
                <td>
                    <input name="Phone" @bind="_ModelBilling.DiscountPerc" class="form-control" required></input>
                </td>
            </tr>
            <tr>
                <td>
                    <button style="background-color: blue; color: white; border: none; padding: 10px 15px; cursor: pointer;">Change</button>
                </td>
            </tr>
        </table>

    </EditForm>
</section>

<style>
    /* Style for the form container */
    .form-container {
        max-width: 300px;
        margin: 0 auto;
    }

    /* Style for the form input */
    .form-control {
        width: 100%;
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    /* Style for the strong tag */
    strong {
        color: #333;
    }

    /* Style for the table cells */
    td {
        padding: 10px;
    }

    /* Style for the floating input container */
    .form-floating {
        position: relative;
    }

        /* Style for the floating label */
        .form-floating label {
            position: absolute;
            top: 0;
            left: 0;
            pointer-events: none;
            padding: 10px;
            transition: 0.2s ease all;
        }

        /* Style for the floating input when focused or not empty */
        .form-floating input:focus,
        .form-floating input:not(:placeholder-shown) {
            padding-top: 18px;
            padding-bottom: 3px;
        }
</style>


<section>
    <div class="card">

        <!-- /.card-header -->
        <div class="card-body">
            <div class="d-flex gap-2">
              <input class="form-control w-50" type="text" @bind="searchTerm" @oninput="SearchTextChanged" id="myInput" placeholder="Search for names.." title="Type in a name">

            <button type="button" class="btn btn-primary" @onclick="CreatePagingInfo">Search</button>   
            </div>
            <div class="table-responsive mt-3">
                <table id="myTable" class="table table-bordered table-striped ">
                    <thead>
                        <tr>
                            <th>pk_MedicineId</th>
                            <th>Name</th>
                            <th>UnitPrice</th>
                            <th>Location</th>
                            <th>Quantity</th>

                        </tr>
                    </thead>
                    <tbody>

                        @foreach (DataRow row in dt.Rows)
                        {
                            <tr>
                                <td>@row["pk_MedId"]</td>
                                <td>@row["Name"]</td>
                                <td>@row["UnitPrice"]</td>
                                <td>@row["Location"]</td>
                                <td>@row["Quantity"]</td>

                            </tr>
                        }
                    </tbody>
                    <tfoot>

                        <tr>
                            <td colspan="10">
                                <Pagination PI="pagingInfo" PageClassesEnabled="true" PageClass="Paging" PageClassSelected="active"></Pagination>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <!-- /.card-body -->
    </div>
</section>


@code {
    public EntBilling _ModelBilling { get; set; } = new EntBilling();
    DataTable dt = new DataTable();

    private void SubmitForm()
    {
        // _ModelBilling = DALCRUD.GetBillingRecordById(_ModelBilling.pk_BillingId);
        // GetMedicineData(_ModelBilling.pk_BillingId);

    }

    public void GetInitialData()
    {
        _ModelBilling = DALCRUD.GetBillingRecordById(_ModelBilling.pk_BillingId);
        GetMedicineData(_ModelBilling.pk_BillingId);
    }

    public async void GetMedicineData(int fk_BillingId)
    {
        SqlParameter[] sp =
        {
            new SqlParameter("@fk_BillingId",fk_BillingId)

    };

        dt = await DALCRUD.ReadDataSpecific("SP_GetMedicineByBillingId", sp);
        StateHasChanged();  
    }



    List<DataRow> allDataRows = new List<DataRow>();
    string searchTerm = "";
    IEnumerable<DataRow> pagedData = Enumerable.Empty<DataRow>();
    [Parameter]
    public int page { get; set; } = 1;
    int pageSize = 15; // Change this to your desired page size

    PagingInfo pagingInfo = new PagingInfo();

    protected override async Task OnInitializedAsync()
    {
        // dt = await DALCRUD.ReadTable("SP_GetMedicineRecord");
        // allDataRows = dt.Rows.Cast<DataRow>().ToList();
        // GetMedicineData(1);
    }
    protected override void OnParametersSet()
    {
        CreatePagingInfo();
    }
    public void CreatePagingInfo()
    {
        pagingInfo.CurrentPage = page;
        pagingInfo.TotalItems = allDataRows.Count;
        pagingInfo.ItemsPerPage = pageSize;

        // Apply search filter
        var filteredData = allDataRows.Where(row =>
      row["Name"].ToString()!.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
      row["Location"].ToString()!.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();

        pagingInfo.TotalItems = filteredData.Count;

        var skip = pageSize * (page - 1);

        if (searchTerm != "")
        {
            pagedData = filteredData;
        }
        else
        {
            pagedData = filteredData.Skip(skip).Take(pageSize);
        }
        Console.WriteLine($"Current Page: {page}, Total Items: {pagingInfo.TotalItems}, Page Size: {pageSize}, Skip: {skip}");
    }

    public void PageChanged(int newPage)
    {
        page = newPage;
        CreatePagingInfo();

    }
    private void SearchTextChanged(ChangeEventArgs e)
    {
        searchTerm = e.Value.ToString();
        CreatePagingInfo();
        // You can add additional logic here if needed
    }
}
