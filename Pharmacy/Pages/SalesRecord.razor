@page "/salesrecord"
@attribute [Authorize(Roles = "Admin")]

<div class="container">
    <h2 class="text-left">Sales Record</h2>

    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                <label for="startDate">Start Date:</label>
                <input type="date" @bind="model.From" class="form-control" />
            </div>
        </div>
        <div class="col-md-5">
            <label for="endDate">End Date:</label>
            <input type="date" @bind="model.To" class="form-control" />
        </div>
        <div class="col-md-2">
            <button class="btn  text-white" style="margin-top:2rem; background-color:#E55246" @onclick="GetSalesRecord">Get Record</button>
        </div>
    </div>
</div>

<div class="card mt-4">

    <div class="card-body table-responsive" style="background-color:#EEEEEE">
        <table id="myTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th class=" text-white" style=" background-color: #288AA7"><i class="fas fa-tag"></i> Total Price</th>
                    <th class=" text-white" style=" background-color: #288AA7"><i class="fas fa-percent"></i> Discount Price</th>
                    <th class=" text-white" style=" background-color: #288AA7"><i class="fas fa-percent"></i> Discount Percentage</th>
                    <th class=" text-white" style=" background-color: #288AA7"><i class="fas fa-dollar-sign"></i> Grand Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (DataRow row in dt.Rows)
                {
                    <tr>
                        <td>@row["TotalPrice"]</td>
                        <td>@row["Discount"]</td>
                        <td>@row["DiscountPerc"]</td>
                        <td>@row["GrandTotal"]</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="3" class="fw-bold fs-5 text-end"><i class="fas fa-chart-line"></i> Total Sale:</td>
                    <td class="fw-bold fs-4">@TotalGrandTotal</td>
                </tr>
                <tr>
                    <td colspan="3" class="fw-bold fs-5 text-end"><i class="fas fa-money-bill-wave"></i>Total Profit:</td>
                    <td class="fw-bold fs-4">@TotalGrandTotal</td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>


@code {
    private EntSalesRecord modelimport { get; set; } = new EntSalesRecord();

    public int TotalGrandTotal { get; set; } = 0;
    EntPointOfSale model = new EntPointOfSale();
    DataTable dt = new DataTable();
    List<DataRow> allDataRows = new List<DataRow>();
    protected List<EntSalesRecord> activitiesList = new();

    protected async Task GetSalesRecord()
    {
        SqlParameter[] sp =
        {

            new SqlParameter("@pharmacyId",v[0]),
            new SqlParameter("@From",model.From),
            new SqlParameter("@To",model.To),

    };
        dt = await DALCRUD.ReadDataSpecific("SP_GetSalesRecord", sp);

        allDataRows = dt.Rows.Cast<DataRow>().ToList();

        foreach (DataRow dataRow in allDataRows)
        {
            EntSalesRecord activity = new EntSalesRecord
                {
                    GrandTotal = Convert.ToInt32(dataRow["GrandTotal"]),

                };

            activitiesList.Add(activity);
        }



        foreach (var emp in activitiesList)
        {
            TotalGrandTotal = TotalGrandTotal + emp.GrandTotal;
        }

    }

    public string[] v { get; set; } = { "Guest", "Guest" };


    public string? value1 { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticatestate { get; set; }
    protected override void OnInitialized()
    {
        DisplayGreeting();

    }
    private async Task DisplayGreeting()
    {
        var authState = await authenticatestate;
        value1 = $"{authState.User.Identity.Name}";
        v = value1.Split(',');
        StateHasChanged();
    }
}