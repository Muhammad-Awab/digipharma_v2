@page "/dashboard"
@attribute [Authorize]
@using ChartJs.Blazor.PieChart
<div class="wrapper">

    <!-- Preloader -->
    <!-- Navbar -->
    <!-- /.navbar -->
    <!-- Content Wrapper. Contains page content -->
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Dashboard</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Dashboard v1</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <!-- Small boxes (Stat box) -->
            <div class="row">
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box bg-info">
                        <div class="inner">
                            @if (CountList != null)
                            {
                                <h3>@CountList!.MedCounts</h3>
                            }
                            <p>Medicine Record</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-bag"></i>
                        </div>
                        <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box bg-success">
                        <div class="inner">
                             @if (CountList != null)
                            {
                                <h3>@CountList!.SalesCounts</h3>
                            }
                            <p>Sales Record</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-stats-bars"></i>
                        </div>
                        <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box bg-warning">
                        <div class="inner">
                             @if (CountList != null)
                            {
                                <h3>@CountList!.UserCounts</h3>
                            }
                            <p>User Registrations</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-person-add"></i>
                        </div>
                        <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box bg-danger">
                        <div class="inner">
                            <h3>65</h3>

                            <p>Unique Visitors</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-pie-graph"></i>
                        </div>
                        <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
            </div>
            <!-- /.row -->
            <!-- Main row -->
          
            <!-- /.row (main row) -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<div class="container">
<Chart Config="_config" ></Chart>
</div>
@code{
    private EntCounts? CountList;

    private void LaodCount()
    {

        this.CountList = DALCRUD.GetCount(int.Parse(v[0]));

    }

    private PieConfig _config;

    protected override void OnInitialized()
    {
        DisplayGreeting();
        LaodCount();
        if (CountList != null)
        {
            _config = new PieConfig
                {
                    Options = new PieOptions
                    {
                        Responsive = true,
                        Title = new OptionsTitle
                        {
                            Display = true,
                            Text = "Records"
                        },
                        AspectRatio = 1,
                        MaintainAspectRatio = false,
                        ResponsiveAnimationDuration = 200

                    }
                };


            foreach (string color in new[] { "Medicine Records", "User Records", "Sales Record" })
            {
                _config.Data.Labels.Add(color);
            }

            PieDataset<int> dataset = new PieDataset<int>(new[] { CountList!.MedCounts, CountList!.UserCounts, CountList!.SalesCounts })
                {
                    BackgroundColor = new[]
                                {
            ColorUtil.ColorHexString(255, 99, 132), // Slice 1 aka "Red"
            ColorUtil.ColorHexString(255, 205, 86), // Slice 2 aka "Yellow"
            ColorUtil.ColorHexString(75, 192, 192), // Slice 3 aka "Green"

        }
                };

            _config.Data.Datasets.Add(dataset);
        }
    }


    public string[] v { get; set; } = { "1", "Guest", "Pharmacy" };


    public string? value1 { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> authenticatestate { get; set; }
  
    private async Task DisplayGreeting()
    {
        var authState = await authenticatestate;
        value1 = $"{authState.User.Identity.Name}";
        v = value1.Split(',');
        StateHasChanged();
    
    }
}