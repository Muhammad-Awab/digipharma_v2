@page "/add_medicine_record"
@page "/add_medicine_record/{id}"

@attribute [Authorize(Roles = "admin")]

<section class="content" style="background-color: #f0f6f9;">
    <div class="container-fluid">

        <div class="row justify-content-center pt-5">
            <div class="col-md-9">
                <div class="card card-primary" style="border: 2px solid #288AA7; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
                    <div class="card-header text-center" style="background-color: #288AA7; color: #fff; border-bottom: none; border-top-left-radius: 10px; border-top-right-radius: 10px;">
                        <h3 style="font-weight: bold;"><i class="fas fa-plus-circle"></i> Add Medicine Record</h3>
                    </div>

                    <div class="card-body">
                        <form>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="medicineName">Medicine Name</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-prescription-bottle"></i></span>
                                            </div>
                                            <input type="text" class="form-control" @bind="model!.Name" placeholder="Enter Medicine Name">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="unitPrice">Unit Price</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-dollar-sign"></i></span>
                                            </div>
                                            <input type="text" @bind="model.UnitPrice" class="form-control" placeholder="Enter Unit Price">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="location">Location</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                            </div>
                                            <input type="text" class="form-control" @bind="model.Location" placeholder="Enter Location">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="stock">Stock</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-cubes"></i></span>
                                            </div>
                                            <input type="text" class="form-control" @bind="model.Stock" placeholder="Enter Stock">
                                        </div>
                                    </div>

                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="manufacturer">Manufacturer</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-industry"></i></span>
                                            </div>
                                            <input type="text" class="form-control" @bind="model.Manufacturer" placeholder="Enter Manufacturer">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="supplier">Supplier</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-truck"></i></span>
                                            </div>
                                            <input type="text" class="form-control" @bind="model.Supplier" placeholder="Enter Supplier">
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="mfgDate">Manufacture Date</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="far fa-calendar-alt"></i></span>
                                            </div>
                                            <input type="date" @bind="model.MfgDate" class="form-control" />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label for="expDate">Expiry Date</label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="far fa-calendar-times"></i></span>
                                            </div>
                                            <input type="date" @bind="model.ExpDate" class="form-control" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="card-footer text-center" style="background-color: #fff; border-top: none; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;">
                                <button @onclick="SaveMedicineRecord" class="btn btn-primary" style="background-color: #288AA7; border: none;"><i class="fas fa-check"></i> Submit</button>
                                <a href="/medicinerecord" class="btn btn-secondary" style="background-color: #288AA7; border: none;"><i class="fas fa-eye"></i> See Medicines</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>





@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticatestate { get; set; }
    public string value { get; set; }
    public string? PageName { get; set; } = "Add Medicine Record";
    public string? ButtonName { get; set; } = "Save";
    [Parameter]
    public string? id { get; set; }
    protected EntMedicineRecord? model { get; set; } = new EntMedicineRecord();

    protected async Task SaveMedicineRecord()
    {

        if (id == null)
        {

            SqlParameter[] sp =
            {
             new SqlParameter("@EntererId",2),
            new SqlParameter("@Name",model!.Name),
            new SqlParameter("@UnitPrice", model.UnitPrice),
            new SqlParameter("@Location", model.Location),
            new SqlParameter("@Stock", model.Stock),
            new SqlParameter("@Manufacturer", model.Manufacturer),
            new SqlParameter("@Supplier", model.Supplier),
            new SqlParameter("@MfgDate",model.MfgDate.ToString()),
            new SqlParameter("@ExpDate", model.ExpDate.ToString())
    };
            await DALCRUD.CRUD("SP_SaveMedicineRecord", sp);
        }
        else
        {
            SqlParameter[] sp =
            {

                new SqlParameter("@pk_MedId",id),
                new SqlParameter("@Name",model!.Name),
                new SqlParameter("@UnitPrice", model.UnitPrice),
                new SqlParameter("@Location", model.Location),
                new SqlParameter("@Stock", model.Stock),
                new SqlParameter("@Manufacturer", model.Manufacturer),
                new SqlParameter("@Supplier", model.Supplier),
                new SqlParameter("@MfgDate",model.MfgDate.ToString()),
                new SqlParameter("@ExpDate", model.ExpDate.ToString())

    };
            await DALCRUD.CRUD("SP_UpdateMedicine", sp);
        }
    }
    DataTable dt = new DataTable();


    protected override async Task OnParametersSetAsync()
    {
        if (id != null)
        {

            PageName = "Update Medicine Record";
            ButtonName = "Update";
            SqlParameter[] sp =
            {
                new SqlParameter("@id",id)
    };
            dt = await DALCRUD.ReadDataSpecific("SP_GetMedicineRecordByID", sp);
            ConvertDataIntoArray();
        }
    }

    private void ConvertDataIntoArray()
    {
        foreach (DataRow row in dt.Rows)
        {
            model = new EntMedicineRecord
                {
                    pk_MedId = Convert.ToInt32(row["pk_MedId"]),
                    Name = row["Name"].ToString(),
                    UnitPrice = Convert.ToInt32(row["UnitPrice"]),
                    Location = row["Location"].ToString(),
                    Stock = Convert.ToInt32(row["Stock"]),
                    Manufacturer = row["Manufacturer"].ToString(),
                    Supplier = row["Supplier"].ToString(),
                    MfgDate = Convert.ToDateTime(row["MfgDate"]),
                    ExpDate = Convert.ToDateTime(row["ExpDate"])
                };


        }

    }

    protected async override Task OnInitializedAsync()
    {
        var authState = await authenticatestate;
        value = $"{authState.User.Identity.Name}";  
    }


}